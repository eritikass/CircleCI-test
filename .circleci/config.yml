# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

jobs:
    testx:
      docker:
        - image: alpine
      steps:
        - run: echo $CIRCLE_BRANCH
        - run: ${CIRCLE_BRANCH/\//-}

    # install:
    #   docker:
    #     - image: circleci/node:10
    #   working_directory: ~/repo
    #   steps:
    #     - checkout
    #     - run: |
    #         echo "hello world"
    #         echo "CIRCLE_SHA1=[$CIRCLE_SHA1]"
    #         echo "CIRCLE_TAG=[$CIRCLE_TAG]"
    #         echo "CIRCLE_BRANCH=[$CIRCLE_BRANCH]"
    #     - run:
    #         name: "install node modules"
    #         command: "npm ci"
    #     - persist_to_workspace:
    #         root: ~/repo
    #         paths:
    #           - node_modules

    # make_docker:
    #   docker:
    #     - image: circleci/python
    #   steps:
    #     - checkout
    #     - setup_remote_docker
    #     - run:
    #         name: "Docker login"
    #         command: |
    #           docker login -u $DOCKER_USER -p $DOCKER_PASS 
    #     - run:
    #         name: "Build/push docker"
    #         command: |
    #           export DOCKER_IMAGE="eritikass/whatever:ci-test-${CIRCLE_WORKFLOW_ID}"
    #           echo "$DOCKER_IMAGE"

    #           GIT_DESCRIBE="`git describe --abbrev=4 --always --tags --dirty`"

    #           docker build -t "$DOCKER_IMAGE" \
    #              --label CIRCLECI="${CIRCLECI}" \
    #              --label CIRCLE_WORKFLOW_ID="${CIRCLE_WORKFLOW_ID}" \
    #              --label CIRCLE_USERNAME="${CIRCLE_USERNAME}" \
    #              --label CIRCLE_SHA1="${CIRCLE_SHA1}" \
    #              --label CIRCLE_TAG="${CIRCLE_TAG}" \
    #              --label CIRCLE_REPOSITORY_URL="${CIRCLE_REPOSITORY_URL}" \
    #              --label CIRCLE_PULL_REQUEST="${CIRCLE_PULL_REQUEST}" \
    #              --label CIRCLE_PROJECT_USERNAME="${CIRCLE_PROJECT_USERNAME}" \
    #              --label CIRCLE_BUILD_URL="${CIRCLE_BUILD_URL}" \
    #              --label CIRCLE_COMPARE_URL="${CIRCLE_COMPARE_URL}" \
    #              --label CIRCLE_BRANCH="${CIRCLE_BRANCH}" \
    #              --label GIT_DESCRIBE="${GIT_DESCRIBE}" \
    #              .

    #           docker push "$DOCKER_IMAGE"

    #           docker inspect --format '{{ json .Config.Labels }}' "$DOCKER_IMAGE" | python -m json.tool

    # use_docker:
    #   docker:
    #     - image: eritikass/whatever:ci-test-$CIRCLE_WORKFLOW_ID
    #       auth:
    #         username: $DOCKER_USER
    #         password: $DOCKER_PASS
    #   steps:
    #     # - checkout
    #     # - setup_remote_docker
    #     - run: echo "${CIRCLE_WORKFLOW_ID}"
    #     - run: pwd
    #     - run: ls -lah
    #     - run: cd /app && pwd && ls -lah
    #     # - run:
    #     #     name: "test docker"
    #     #     command: |
    #     #       docker login -u $DOCKER_USER -p $DOCKER_PASS
    #     #       export DOCKER_IMAGE="eritikass/whatever:ci-test-${CIRCLE_WORKFLOW_ID}"
    #     #       echo "$DOCKER_IMAGE"
    #     #       docker pull "$DOCKER_IMAGE"

    # test:
    #   docker:
    #     - image: circleci/node:10
    #   working_directory: ~/repo
    #   steps:
    #     - run: ls -lah
    #     - checkout
    #     - run: ls -lah
    #     - attach_workspace:
    #         at: ~/repo
    #     - run: ls -lah
    #     - run: touch node_modules/cat.txt
    #     - run: ls -lah node_modules
    #     - run: |
    #         echo "hello world"
    #         echo "CIRCLE_SHA1=[$CIRCLE_SHA1]"
    #         echo "CIRCLE_TAG=[$CIRCLE_TAG]"
    #         echo "CIRCLE_BRANCH=[$CIRCLE_BRANCH]"

    # build:
    #   docker:
    #     - image: circleci/node:10
    #   working_directory: ~/repo
    #   steps:
    #     - run: ls -lah
    #     - checkout
    #     - run: ls -lah
    #     - attach_workspace:
    #         at: ~/repo
    #     - run: ls -lah
    #     - run: ls -lah node_modules
    #     - run: |
    #         echo "hello world"
    #         echo "CIRCLE_SHA1=[$CIRCLE_SHA1]"
    #         echo "CIRCLE_TAG=[$CIRCLE_TAG]"
    #         echo "CIRCLE_BRANCH=[$CIRCLE_BRANCH]"
    #     - store_artifacts:
    #         path: ~/repo/node_modules/chalk
    #         destination: chalk-stuff


# Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
workflows:
  testing_things:
    jobs:
        - testx

      # - make_docker:
      #     filters:
      #       tags:
      #         only: /.*/

      # - use_docker:
      #     filters:
      #       tags:
      #         only: /.*/
      #     requires:
      #       - make_docker


      # - install:
      #     filters:
      #       tags:
      #         only: /.*/
      # - test:
      #     filters:
      #       tags:
      #         only: /.*/
      #     requires:
      #       - install
      # - build:
      #     filters:
      #       tags:
      #         only: /.*/
      #     requires:
      #       - install
      #       - test